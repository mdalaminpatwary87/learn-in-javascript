/*====================================================================================================================================================
Booleans => Booleans can only have two values, true or false. Booleans are often used in conditional testing.
======================================================================================================================================================*/
// It can only take the values true or false
var x = true;
console.log(x); // return true 

var x = false;
console.log(x); // return false 

/*====================================================================================================================================================
Boolean literals and boolean constructor 
======================================================================================================================================================*/
var x = true; // boolean literals
console.log(typeof x);

var x = Boolean(10 > 5); // boolean constructor 
console.log(x +' '+ typeof x);

/*====================================================================================================================================================
check data type using typeof operators
======================================================================================================================================================*/
var x = true;
console.log(typeof x);

var x = false;
console.log(typeof x);

/*====================================================================================================================================================
Boolean() Function => Boolean() function to find out if an expression (or a variable) is true or false.
======================================================================================================================================================*/
console.log(Boolean(10 > 9));
console.log(Boolean(10 < 9));

console.log(typeof Boolean(10 > 9));
console.log(typeof Boolean(10 < 9));

/*====================================================================================================================================================
Or even easier:
======================================================================================================================================================*/
console.log(10 > 9);
console.log(10 < 9);

console.log(typeof (10 > 9));
console.log(typeof (10 < 9));

/*====================================================================================================================================================
real life expamle 
======================================================================================================================================================*/
var x = 5; 
var y = 5; 
var z = 6;
console.log(x == y);
console.log(x == z);

/*====================================================================================================================================================
The Boolean value of 0 (zero) is false
======================================================================================================================================================*/
var x = 0;
console.log(Boolean(x));

/*====================================================================================================================================================
The Boolean value of -0 (minus zero) is false
======================================================================================================================================================*/
var x = - 0;
console.log(Boolean(x));

/*====================================================================================================================================================
The Boolean value of "" (empty string) is false
======================================================================================================================================================*/
var x = "";
console.log(Boolean(x));
/*====================================================================================================================================================
The Boolean value of undefined is false
======================================================================================================================================================*/
var x;
console.log(Boolean(x));

/*====================================================================================================================================================
The Boolean value of null is false
======================================================================================================================================================*/
var x = null;
console.log(Boolean(x));

/*====================================================================================================================================================
The Boolean value of false is (you guessed it) false
======================================================================================================================================================*/
var x = false;
console.log(Boolean(x));

/*====================================================================================================================================================
The Boolean value of NaN is false
======================================================================================================================================================*/
var x = 10 / "Hello World";
console.log(Boolean(x));

/*====================================================================================================================================================
JavaScript Booleans as Objects => 
                                01. Normally JavaScript booleans are primitive values created from literals.
                                02. But booleans can also be defined as objects with the keyword new
                                var x = false;  // boolean literals
                                var y = new Boolean(false) // boolean object

NoteDown => Do not create Boolean objects. The new keyword complicates the code and slows down execution speed. Boolean objects can produce unexpected results.               
======================================================================================================================================================*/
var x = false;  // boolean literals
console.log(typeof x);

var x = new Boolean(false); // boolean object
console.log(typeof x);

// When using the == operator, x and y are equal:
var x = false; 
var y = new Boolean(false); 
console.log(x == y); 

/*====================================================================================================================================================
JavaScript objects cannot be compared. Bleow example Comparing two JavaScript objects always returns false.

Note the difference between (x==y) and (x===y). Comparing two JavaScript objects always return false.
======================================================================================================================================================*/
var x = new Boolean(false);
var y = new Boolean(false);
console.log(x == y); 

var x = new Boolean(false);
var y = new Boolean(false);
console.log(x === y); 




 